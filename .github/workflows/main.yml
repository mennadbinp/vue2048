name: CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 8 * * 1"
  workflow_dispatch:
    inputs:
      static-analysis:
        description: 'static-analysis'
        required: false
        default: true
      test:
        description: 'unit-test'
        required: false
        default: true

env:
  ARTIFACT_NAME: "artifact-vue2048"
  AZURE_WEBAPP_NAME_PROD: stapp-vue2048-prod 
  AZURE_WEBAPP_NAME_QA: stapp-vue2048-qa
  AZURE_WEBAPP_PACKAGE_PATH: './dist/'  
  APP_LOCATION: "/"
  
permissions:
  contents: read

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: '.'
          
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: install-pnpm
        run: |
          curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
          pnpm config set store-dir .pnpm-store

      - name: setup-node
        uses: actions/setup-node@v3

      - name: build
        run: |
          pnpm install
          pnpm run build  

      - name: artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: dist/
          retention-days: ${{ github.ref == 'refs/heads/main' && 7 || 1 }}
          
      - name: static-analysis
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && inputs.static-analysis == 'true'
        run: |
          pnpm lint
          pnpm type-check
          
      - name: unit-test
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && inputs.test == 'true'
        run: |
          pnpm test    
          
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download-artifact 
        uses: actions/download-artifact@v3
        with:
          name: artifact-vue2048
          path: ${{github.workspace}}

      - name: deploy-prod 
        if: github.event_name == 'workflow_dispatch'
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: upload
          app-name: ${{ env.AZURE_WEBAPP_NAME_PROD }}
          azure_static_web_apps_api_token: ${{ secrets.AZURE_TOKEN_PROD }}
          app_artifact_location: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          app_location: ${{ env.APP_LOCATION }}
          skip_app_build: true

      - name: deploy-qa
        if: github.event_name == 'workflow_dispatch'
        uses: Azure/static-web-apps-deploy@v1
        env:
          name: qa
        with:
          action: upload
          app-name: ${{ env.AZURE_WEBAPP_NAME_QA }}
          azure_static_web_apps_api_token: ${{ secrets.AZURE_TOKEN_QA }}
          app_artifact_location: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          app_location: ${{ env.APP_LOCATION }}
          skip_app_build: true
